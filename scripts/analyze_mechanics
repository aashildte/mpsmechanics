#!/usr/bin/env python3

"""

Given data on displacement, this script calculates derived quantities,
including
- velocity
- strain
- beat rate

Run script as (with python 3)

    python analyze_mechanics [input files]

or install it using the setup file, running it as

    analyze_mechanics [input files]

where the input files are nd2/npy files containing displacement data.

Ã…shild Telle / Simula Research Labratory / 2019

"""

import sys
from argparse import ArgumentParser
import mpsmechanics as mc


def cl_parser(args):

    parser = ArgumentParser()

    parser.add_argument("input_files", \
            help="BF files to run the script for", \
            nargs="+")
    
    parser.add_argument("-o", "--overwrite", \
            help="Recalculate and overwrite previous data/plots..",
            action="store_true")

    parser.add_argument("-d", "--debug", \
                        help="Run script in debug mode",
                        action="store_true")

    args = parser.parse_args()

    input_files = mc.get_input_files(args.input_files)
    debug_mode = args.debug

    return input_files, debug_mode


if __name__ == "__main__":

    input_files, debug_mode = cl_parser(sys.argv[1:])

    for f in input_files:
        if debug_mode:
            mc.analyze_mechanics(f)
            mc.calculate_metrics(f)
            mc.visualize_over_time(f)
        else:
            try:
                mc.analyze_mechanics(f)
                mc.calculate_metrics(f)
                mc.visualize_over_time(f)

            except Exception as e:
                print(f"Could not run analyze_mechanics; error msg: {e}")
                if f is not input_files[-1]:
                    print("Launching script for next file ...")

