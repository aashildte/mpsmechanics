#!/usr/bin/env python3

"""

Given data on displacement, this scripts finds the peak values and plots
spacial distribution of given metrics for these.

Run script as (with python 3)

    visualize_vectorfield [input files] [scaling nuber]

where the input files are csv/nd2 files containing displacement data,
(see README), scaling number change in frame rate.

Ã…shild Telle / Simula Research Labratory / 2019

"""

import sys
import mpsmechanics as mc

from argparse import ArgumentParser


def cl_parser(args):

    parser = ArgumentParser()

    parser.add_argument("input_files", \
            help="BF files to run the script for", \
            nargs="+")

    parser.add_argument("-s", "--scaling_factor", \
            default=0.2,
            help="Scaling factor for fps; 1 = real time, 0.5 half speed",
            type=float)

    parser.add_argument("-d", "--debug", \
            help="Run script in debug mode",
            action="store_true")

    args = parser.parse_args()

    input_files = mc.get_input_files(args.input_files)
    debug_mode = args.debug
    scale = args.scaling_factor

    return input_files, debug_mode, scale


if __name__ == "__main__":
    input_files, debug_mode, scale = cl_parser(sys.argv[1:])

    for f in input_files:
        if debug_mode:
            mc.visualize_distributions(f, scale)
        else:
            try:
                mc.visualize_distributions(f, scale)

            except Exception as e:
                print(f"Could not run visualize_distributions; error msg: {e}")
                if f is not input_files[-1]:
                    print("Launching script for next file ...") 
